# GitHub Actions Documentation: https://docs.github.com/en/actions

name: "Continuous Integration"

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "main"

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  memcheck:
    name: "Test for Memory Leaks"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3.5.2"

      - name: "Install Valgrind"
        run: |
          sudo apt-get update
          sudo apt-get install -y valgrind
          valgrind --version

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.25.2"
        with:
          php-version: "latest"
          extensions: "intl-67.1"
          coverage: "none"
        env:
          debug: true
          phpts: "nts"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@2.2.0"

      - name: "Build and install ecma_intl"
        run: |
          phpize
          ./configure --enable-ecma_intl
          make -j$(nproc)
          php -d extension="$PWD/modules/ecma_intl.so" --ri ecma_intl

      - name: "Run tests (phpt with memcheck)"
        run: "composer dev:test:memcheck"

  tests:
    name: "PHPT: PHP ${{ matrix.php }}, ICU ${{ matrix.icu }}"
    needs: ["memcheck"]
    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php:
          - "8.2"
        icu:
          - "67.1"
          - "68.2"
          - "69.1"
          - "70.1"
          - "71.1"
          - "72.1"
          - "73.1"

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v3.5.2"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.25.2"
        with:
          php-version: "${{ matrix.php }}"
          extensions: "intl-${{ matrix.icu }}"
          coverage: "none"
        env:
          debug: true
          phpts: "nts"

      - name: "Install dependencies (Composer)"
        uses: "ramsey/composer-install@2.2.0"

      - name: "Build and install ecma_intl"
        run: |
          phpize
          ./configure --enable-ecma_intl
          make -j$(nproc)
          php -d extension="$PWD/modules/ecma_intl.so" --ri ecma_intl

      - name: "Run tests (phpt)"
        run: "composer dev:test:phpt"
